// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamStatsTracker.Infrastructure.Persistence;

#nullable disable

namespace SteamStatsTracker.Infrastructure.Migrations
{
    [DbContext(typeof(SteamDbContext))]
    partial class SteamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.OwnedGame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PlaytimeForever")
                        .HasColumnType("float");

                    b.Property<Guid>("SteamUserStatsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SteamUserStatsId");

                    b.ToTable("OwnedGames");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.SteamUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SteamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SteamId")
                        .IsUnique();

                    b.ToTable("SteamUsers");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.SteamUserStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BadgeCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCollected")
                        .HasColumnType("datetime2");

                    b.Property<double>("PlaytimeForever")
                        .HasColumnType("float");

                    b.Property<string>("SteamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteamLevel")
                        .HasColumnType("int");

                    b.Property<string>("SteamUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalGames")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SteamUserId");

                    b.ToTable("SteamUserStats");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.OwnedGame", b =>
                {
                    b.HasOne("SteamStatsTracker.Domain.Entities.SteamUserStats", "SteamUserStats")
                        .WithMany("Games")
                        .HasForeignKey("SteamUserStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamUserStats");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.SteamUserStats", b =>
                {
                    b.HasOne("SteamStatsTracker.Domain.Entities.SteamUser", "SteamUser")
                        .WithMany("StatsHistory")
                        .HasForeignKey("SteamUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamUser");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.SteamUser", b =>
                {
                    b.Navigation("StatsHistory");
                });

            modelBuilder.Entity("SteamStatsTracker.Domain.Entities.SteamUserStats", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
